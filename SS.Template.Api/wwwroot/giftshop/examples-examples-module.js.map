{"version":3,"sources":["./src/app/examples/example-edit/example-edit.component.html","./src/app/examples/example-list/example-list.component.html","./src/app/common/component-base.ts","./src/app/common/requestCounter.ts","./src/app/examples/example-edit/example-edit.component.scss","./src/app/examples/example-edit/example-edit.component.ts","./src/app/examples/example-list/example-list.component.scss","./src/app/examples/example-list/example-list.component.ts","./src/app/examples/examples-routing.module.ts","./src/app/examples/examples.module.ts","./src/app/examples/services/examples.service.ts"],"names":[],"mappings":"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","file":"examples-examples-module.js","sourcesContent":["export default \"<div class=\\\"py-md-3\\\">\\n  <app-panel [loading]=\\\"loading\\\">\\n    <form (ngSubmit)=\\\"submit()\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"row form-group\\\">\\n            <label for=\\\"name\\\" class=\\\"col-md-4 col-form-label required\\\">{{\\n              'examples.NAME' | translate\\n            }}</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"name\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"name\\\"\\n              />\\n              <span\\n                class=\\\"messages\\\"\\n                *ngIf=\\\"submitted &amp;&amp; form.controls.name.invalid\\\"\\n              >\\n                <p\\n                  *ngIf=\\\"form.controls.name.errors.required\\\"\\n                  class=\\\"text-danger error\\\"\\n                >\\n                  {{ 'validations.REQUIRED' | translate }}\\n                </p>\\n                <p\\n                  *ngIf=\\\"form.controls.name.errors.maxlength\\\"\\n                  class=\\\"text-danger error\\\"\\n                >\\n                  {{\\n                    'validations.MAX_LENGTH'\\n                      | translate\\n                        : {\\n                            requiredLength:\\n                              form.controls.name.errors.maxlength\\n                                .requiredLength,\\n                            actualLength:\\n                              form.controls.name.errors.maxlength.actualLength\\n                          }\\n                  }}\\n                </p>\\n              </span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"col-md-4 col-form-label required\\\">{{\\n              'examples.EMAIL' | translate\\n            }}</label>\\n            <div class=\\\"col-md-8\\\">\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"email\\\"\\n                type=\\\"email\\\"\\n                formControlName=\\\"email\\\"\\n              />\\n              <span\\n                class=\\\"messages\\\"\\n                *ngIf=\\\"submitted &amp;&amp; form.controls.email.invalid\\\"\\n              >\\n                <p\\n                  *ngIf=\\\"form.controls.email.errors.required\\\"\\n                  class=\\\"text-danger error\\\"\\n                >\\n                  {{ 'validations.REQUIRED' | translate }}\\n                </p>\\n                <p\\n                  *ngIf=\\\"form.controls.email.errors.email\\\"\\n                  class=\\\"text-danger error\\\"\\n                >\\n                  {{ 'validations.INVALID_EMAIL' | translate }}\\n                </p>\\n                <p\\n                  *ngIf=\\\"form.controls.email.errors.maxlength\\\"\\n                  class=\\\"text-danger error\\\"\\n                >\\n                  {{\\n                    'validations.MAX_LENGTH'\\n                      | translate\\n                        : {\\n                            requiredLength:\\n                              form.controls.email.errors.maxlength\\n                                .requiredLength,\\n                            actualLength:\\n                              form.controls.email.errors.maxlength.actualLength\\n                          }\\n                  }}\\n                </p>\\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row form-group\\\">\\n        <div class=\\\"col text-right form-actions\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            {{ 'app.SAVE' | translate }}\\n          </button>\\n          <a [routerLink]=\\\"['../../']\\\" class=\\\"btn btn-danger\\\">{{\\n            'app.CANCEL' | translate\\n          }}</a>\\n        </div>\\n      </div>\\n    </form>\\n  </app-panel>\\n</div>\\n\"","export default \"<div class=\\\"py-md-3\\\">\\n  <a class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['./new']\\\">\\n    {{ 'app.NEW' | translate }}\\n  </a>\\n</div>\\n<app-panel [loading]=\\\"loading\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-striped table-bordered\\\" appTablesort (sort)=\\\"sort($event)\\\">\\n      <thead>\\n        <tr>\\n          <th appTablesortCol=\\\"name\\\">{{ 'examples.NAME' | translate }}</th>\\n          <th appTablesortCol=\\\"email\\\">{{ 'examples.EMAIL' | translate }}</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of page?.items\\\">\\n          <td>{{ item.name }}</td>\\n          <td>{{ item.email }}</td>\\n          <td class=\\\"table-actions\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"delete(item)\\\">\\n              <i class=\\\"far fa-trash-alt\\\"></i>\\n              {{ 'app.REMOVE' | translate }}\\n            </button>\\n            <a [routerLink]=\\\"['./', item.id, 'edit']\\\" class=\\\"btn btn-info\\\">\\n              <i class=\\\"fas fa-pencil-alt\\\"></i>\\n              {{ 'app.EDIT' | translate }}\\n            </a>\\n          </td>\\n        </tr>\\n      </tbody>\\n      <tfoot>\\n        <tr>\\n          <td colspan=\\\"6\\\">\\n            <app-pagination [page]=\\\"page\\\" (pageChange)=\\\"getPage($event)\\\"></app-pagination>\\n          </td>\\n        </tr>\\n      </tfoot>\\n    </table>\\n  </div>\\n</app-panel>\\n\"","// @angular\nimport { OnDestroy } from '@angular/core';\n\n// libs\nimport { Observable } from 'rxjs';\n\n// app\nimport { RequestCounter } from './requestCounter';\n\nconst editMode = 'edit';\nconst addMode = 'add';\n\nexport class ComponentBase implements OnDestroy {\n\n  private _mode: string;\n  private readonly _counter: RequestCounter;\n  private readonly _ownsCounter: boolean;\n\n  public get editMode(): boolean {\n    return this._mode === editMode;\n  }\n\n  public get addMode(): boolean {\n    return this._mode === addMode;\n  }\n\n  public get loading(): boolean {\n    return this._counter.loading;\n  }\n\n  public get loadingObservable(): Observable<boolean> {\n    return this._counter.loadingObservable;\n  }\n\n  constructor(counter: RequestCounter = null) {\n    this._counter = counter || new RequestCounter();\n    this._ownsCounter = !counter;\n  }\n\n  ngOnDestroy() {\n    if (this._ownsCounter) {\n      this._counter.ngOnDestroy();\n    }\n  }\n\n  protected registerRequest<T = any>(observable: Observable<T>): Observable<T> {\n    return this._counter.registerRequest(observable);\n  }\n\n  protected wrap<T = any>(observable: Observable<T>): Observable<T> {\n    return this._counter.wrap(observable);\n  }\n\n  protected setEditMode(): void {\n    this._mode = editMode;\n  }\n\n  protected setAddMode(): void {\n    this._mode = addMode;\n  }\n}\n","// Angular\nimport { OnDestroy, Injectable } from '@angular/core';\n\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\nimport { map, distinctUntilChanged, takeUntil, finalize } from 'rxjs/operators';\n\n// libs\n\nenum RequestAction {\n  Increase = 1,\n  Decrease = -1\n}\n\n@Injectable()\nexport class RequestCounter implements OnDestroy {\n  private _ngUnsubscribe = new Subject();\n  private readonly _requestsSubject = new Subject<number>();\n  private readonly _loadingSubject = new BehaviorSubject<boolean>(false);\n\n  private _requestCount = 0;\n\n  public get isDestroyed(): boolean {\n    return this._ngUnsubscribe === null;\n  }\n\n  public get loading(): boolean {\n    return this._loadingSubject.value;\n  }\n\n  public get loadingObservable(): Observable<boolean> {\n    return this._loadingSubject;\n  }\n\n  constructor() {\n    this._requestsSubject.pipe(\n      map(delta => {\n        this._requestCount += delta;\n        if (this._requestCount < 0) {\n          throw new Error('Request count should not reach negative.');\n        }\n        return this._requestCount > 0;\n      }),\n      distinctUntilChanged()\n    ).subscribe(value => {\n      setTimeout(() => {\n        this._loadingSubject.next(value);\n      });\n    });\n  }\n\n  registerRequest<T = any>(observable: Observable<T>): Observable<T> {\n    if (this.isDestroyed) {\n      throw new Error('Instance is destroyed');\n    }\n\n    this.setRequestCount(RequestAction.Increase);\n    try {\n      return observable\n        .pipe(\n          takeUntil(this._ngUnsubscribe),\n          finalize(() => {\n            this.setRequestCount(RequestAction.Decrease);\n          })\n        );\n    } catch {\n      this.setRequestCount(RequestAction.Decrease);\n    }\n  }\n\n  wrap<T = any>(observable: Observable<T>): Observable<T> {\n    return observable.pipe(takeUntil(this._ngUnsubscribe));\n  }\n\n  ngOnDestroy(): void {\n    if (this.isDestroyed) {\n      return;\n    }\n    this._ngUnsubscribe.next();\n    this._ngUnsubscribe.complete();\n    this._ngUnsubscribe = null;\n\n    this._requestsSubject.complete();\n    this._loadingSubject.complete();\n\n    this._requestCount = 0;\n  }\n\n  private setRequestCount(delta: RequestAction) {\n    this._requestsSubject.next(delta);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW1wbGVzL2V4YW1wbGUtZWRpdC9leGFtcGxlLWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ComponentBase } from 'src/app/common/component-base';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { ExamplesService } from '../services/examples.service';\nimport { AppValidators } from 'src/app/common/app-validators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ErrorHandlerService } from 'src/app/core/services/error-handler.service';\nimport { NotificationService } from 'src/app/core/services/notification.service';\n\n@Component({\n  selector: 'app-example-edit',\n  templateUrl: './example-edit.component.html',\n  styleUrls: ['./example-edit.component.scss'],\n})\nexport class ExampleEditComponent extends ComponentBase implements OnInit {\n  public form: FormGroup;\n  public exampleId: string;\n  public submitted = false;\n\n  public get haveChanges(): boolean {\n    return this.form.dirty;\n  }\n\n  constructor(\n    private readonly _examplesService: ExamplesService,\n    private readonly _route: ActivatedRoute,\n    private readonly _router: Router,\n    private readonly _errorHandler: ErrorHandlerService,\n    private readonly _notificationService: NotificationService,\n    public fb: FormBuilder\n  ) {\n    super();\n\n    this.form = fb.group({\n      email: [\n        '',\n        [Validators.required, Validators.maxLength(50), AppValidators.email],\n      ],\n      name: ['', [Validators.required, Validators.maxLength(50)]],\n    });\n  }\n\n  ngOnInit() {\n    this.exampleId = this._route.snapshot.paramMap.get('id');\n\n    if (this.exampleId) {\n      this.setEditMode();\n\n      this.get(this.exampleId);\n    } else {\n      this.setAddMode();\n    }\n  }\n  submit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n\n    const model = this.form.getRawValue();\n\n    if (this.exampleId) {\n      this.registerRequest(\n        this._examplesService.update(this.exampleId, model)\n      ).subscribe(\n        () => {\n          this.form.markAsPristine();\n          this.handleSuccess();\n        },\n        errorResponse => {\n          this._errorHandler.handle(errorResponse);\n        }\n      );\n    } else {\n      this.registerRequest(this._examplesService.save(model)).subscribe(\n        () => {\n          this.form.markAsPristine();\n          this.handleSuccess();\n        },\n        errorResponse => {\n          this._errorHandler.handle(errorResponse);\n        }\n      );\n    }\n  }\n\n  private get(exampleId: string) {\n    this.registerRequest(this._examplesService.get(exampleId)).subscribe({\n      next: queryResult => this.form.patchValue(queryResult),\n      error: errorResponse => this._errorHandler.handle(errorResponse),\n    });\n  }\n\n  private back() {\n    this._router.navigate(['../'], { relativeTo: this._route });\n  }\n\n  private handleSuccess(): void {\n    this._notificationService.success({ key: 'app.SAVE_SUCCESS' });\n    this.back();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW1wbGVzL2V4YW1wbGUtbGlzdC9leGFtcGxlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { ComponentBase } from '../../common/component-base';\nimport { PaginatedResult } from '../../common/models/paginated-result.model';\nimport { PaginatedRequest } from '../../common/models/paginated-request.model';\nimport { ExamplesService } from '../services/examples.service';\nimport { Example } from '../../common/models/example.model';\nimport { MessageBoxService } from '../../core/services/message-box.service';\nimport { ErrorHandlerService } from '../../core/services/error-handler.service';\n\n@Component({\n  selector: 'app-example-list',\n  templateUrl: './example-list.component.html',\n  styleUrls: ['./example-list.component.scss'],\n})\nexport class ExampleListComponent extends ComponentBase\n  implements OnInit, OnDestroy {\n  private _paginatedRequest: PaginatedRequest = {};\n  page: PaginatedResult<Example>;\n\n  constructor(\n    private _examplesService: ExamplesService,\n    private _messageBox: MessageBoxService,\n    private _errorHandler: ErrorHandlerService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.getPage(1);\n  }\n\n  getPage(page: number) {\n    this._paginatedRequest.page = page;\n    this.registerRequest(\n      this._examplesService.getPage(this._paginatedRequest)\n    ).subscribe((response) => {\n      this.page = response;\n    });\n  }\n\n  sort(value: string) {\n    this._paginatedRequest.orderBy = value;\n    this.getPage(this._paginatedRequest.page);\n  }\n\n  delete(example: Example) {\n    this._messageBox\n      .confirm(\n        { key: 'examples.CONFIRM_DELETE', arg: { name: example.name } },\n        'examples.DELETE'\n      )\n      .subscribe((result: boolean) => {\n        if (result) {\n          this._examplesService.delete(example.id).subscribe(\n            () => {\n              this.getPage(1);\n            },\n            error => this._errorHandler.handle(error)\n          );\n        }\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExampleListComponent } from './example-list/example-list.component';\nimport { ExampleEditComponent } from './example-edit/example-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExampleListComponent,\n  },\n  {\n    path: 'new',\n    component: ExampleEditComponent,\n  },\n  {\n    path: ':id/edit',\n    component: ExampleEditComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExamplesRoutingModule {}\n","import { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { ExamplesRoutingModule } from './examples-routing.module';\nimport { ExampleListComponent } from './example-list/example-list.component';\nimport { ExamplesService } from './services/examples.service';\nimport { ExampleEditComponent } from './example-edit/example-edit.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [ExampleListComponent, ExampleEditComponent],\n  imports: [\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    ExamplesRoutingModule,\n  ],\n  providers: [ExamplesService],\n  entryComponents: [],\n})\nexport class ExamplesModule {}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { API_URL } from '../../core/api-url.token';\nimport { ASSETS_URL } from '../../core/assets-url.token';\nimport { PaginatedRequest } from '../../common/models/paginated-request.model';\nimport { PaginatedResult } from '../../common/models/paginated-result.model';\nimport { Example } from '../../common/models/example.model';\n\n@Injectable()\nexport class ExamplesService {\n\n  private readonly _url: string;\n\n  constructor(\n    private _httpClient: HttpClient,\n    @Inject(API_URL) apiUrl: string,\n    @Inject(ASSETS_URL) assetsUrl: string) {\n    this._url = `${apiUrl}/api/examples`;\n  }\n\n  getPage(query: PaginatedRequest): Observable<PaginatedResult<Example>> {\n    const params: any = query;\n    return this._httpClient.get<PaginatedResult<Example>>(this._url, { params });\n  }\n\n  get(id: string): Observable<Example> {\n    return this._httpClient.get<Example>(`${this._url}/${id}`);\n  }\n\n  save(model: Example): Observable<any> {\n    return this._httpClient.post<any>(this._url, model);\n  }\n\n  update(id: string, model: Example,): Observable<any> {\n    return this._httpClient.put<any>(`${this._url}/${id}`, model);\n  }\n\n  delete(id: string): Observable<any> {\n    return this._httpClient.delete<any>(`${this._url}/${id}`);\n  }\n}\n"],"sourceRoot":"webpack:///"}